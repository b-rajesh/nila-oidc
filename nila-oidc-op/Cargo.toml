[package]
name = "nila-oidc-op"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true
description = "A robust, modular OpenID Connect (OIDC) and OAuth2 library for the Pingora framework."
readme = "README.md"

[dependencies]
# Core
log.workspace = true
serde.workspace = true
serde_json.workspace = true
thiserror = "1.0"
tokio.workspace = true
url.workspace = true
rsa = { workspace = true, features = ["pem"] }
sha2.workspace = true
uuid.workspace = true

# JWT & JWKS Handling
jsonwebtoken = { workspace = true, features = ["use_pem"] }
reqwest.workspace = true
once_cell.workspace = true
bytes.workspace = true
base64.workspace = true
base64-url.workspace = true

# Caching
moka.workspace = true

# --- Optional Dependencies ---

# For Pingora Integration
pingora-proxy = { git = "https://github.com/cloudflare/pingora", branch = "main", optional = true, package = "pingora-proxy" }
pingora-core = { git = "https://github.com/cloudflare/pingora", branch = "main", optional = true, package = "pingora-core" }
pingora-http = { git = "https://github.com/cloudflare/pingora", branch = "main", optional = true, package = "pingora-http" }

# For Redis Caching
redis = { workspace = true, optional = true }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3", features = ["fmt", "env-filter"] }

[features]
# Default feature enables the Pingora integration layer.
default = ["pingora-integration"]

# Enables the code specific to integrating with the Pingora framework.
pingora-integration = [
    "dep:pingora-proxy",
    "dep:pingora-core",
    "dep:pingora-http",
]

# Enables Redis as a caching backend for JWKS.
redis-cache = ["dep:redis"]

[dev-dependencies]
# Testing Frameworks
wiremock = "0.6"
tempfile = "3.10"

# For generating test keys and tokens
rand = "0.9.1"           # Keep rand here as it's only for dev/testing
chrono = "0.4.38"
base64-url = "3.0.0"
async-trait = "0.1"      # For ProxyHttp trait
serde_yaml = "0.9"       # For YAML config in example
serde_urlencoded = "0.7" # For parsing token request body
# pingora-server = { git = "https://github.com/cloudflare/pingora", branch = "main", package = "pingora-server" }
pingora-http = { git = "https://github.com/cloudflare/pingora", branch = "main", package = "pingora-http" }
