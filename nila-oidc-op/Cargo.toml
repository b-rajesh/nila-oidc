[package]
name = "nila-oidc-op"
description = "An OpenID Connect (OIDC) provider library for the Pingora framework."
version.workspace = true
edition = "2021"
rust-version.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
readme = "README.md"

[dependencies]
# Core
log = "0.4.22"
serde.workspace = true
serde_json = "1.0.120"
thiserror.workspace = true
tokio.workspace = true
url.workspace = true
rsa = { version = "0.9.8", features = ["pem"] }
sha2 = "0.10.8"
uuid = { version = "1.9.1", features = ["v4"] }

# JWT & JWKS Handling
jsonwebtoken = "9.3.0"
reqwest = { workspace = true, features = ["json"] }
once_cell = "1.19.0"
bytes = "1.6.0"
base64 = "0.22.1"
base64-url = "3.0.0"

# Caching
moka = { version = "0.12.8", features = ["future"] }

# --- Optional Dependencies ---

# For Pingora Integration
pingora-proxy = { git = "https://github.com/cloudflare/pingora", branch = "main", optional = true }
pingora-core = { git = "https://github.com/cloudflare/pingora", branch = "main", optional = true }
pingora-http = { git = "https://github.com/cloudflare/pingora", branch = "main", optional = true }

# For Redis Caching
redis = { version = "0.32.4", features = ["tokio-comp"], optional = true }
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["fmt", "env-filter"] }

[features]
# Default feature enables the Pingora integration layer.
default = ["pingora-integration"]

# Enables the code specific to integrating with the Pingora framework.
pingora-integration = [
    "dep:pingora-proxy",
    "dep:pingora-core",
    "dep:pingora-http",
]

# Enables Redis as a caching backend for JWKS.
redis-cache = ["dep:redis"]

[dev-dependencies]
# Testing Frameworks
wiremock = "0.6.1"
tempfile = "3.10.1"

# For generating test keys and tokens
rand = "0.9.2"
chrono.workspace = true
async-trait = "0.1.80"
serde_yaml = "0.9.34"
serde_urlencoded = "0.7.1"
pingora-http = { git = "https://github.com/cloudflare/pingora", branch = "main" }
